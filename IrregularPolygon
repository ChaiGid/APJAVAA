import java.awt.Graphics2D;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
public class IrregularPolygon extends Polygon
{
	public IrregularPolygon(int myNumSides,Point2D myCenter,int maxRadius, int minRadius, int xVelocity, int yVelocity, int rVelocity) 
	{
		super(myCenter, myNumSides, maxRadius, xVelocity, yVelocity, rVelocity);
		double theta = 0;
		double radTheta = 0;
		Point2D[] temp = new Point2D[myNumSides];
		int radius = 0;
		for(int c=0; c<myNumSides; c++)
		{
			radius = randInt(minRadius, maxRadius);
			radTheta=Math.toRadians(theta);
			double x = myCenter.getX()+Math.cos(radTheta)*Math.random() * radius;
			double y = myCenter.getY()+Math.sin(radTheta)*Math.random() * radius;
			myVertices[c]= new Point2D.Double(x,y);
			theta += 360/myNumSides;
		}
		super.setVertices(temp);
	}
	private int randInt(int lower, int upper)
	  {
		  return (int) (Math.random()*(upper-lower+1)+lower);
	  }
	public void drawPolyon(Graphics2D graphic) 
	{
		Line2D line = null;
		Line2D[] values = new Line2D[mynumSides];
			for(int count = 0; count < mynumSides - 1; count++) 
			{
				values[count] = new Line2D.Double();
				values[count].setLine(myVertices[count], myVertices[count + 1]);
			}
		values[mynumSides - 1] = new Line2D.Double();
		values[mynumSides - 1].setLine(myVertices[mynumSides - 1], myVertices[0]);
		int count = 0;
		while(count < values.length) 
		{
			graphic.draw(line);
			count++;
		}
	}
}
